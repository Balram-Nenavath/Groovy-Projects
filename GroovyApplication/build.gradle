plugins {
	id 'groovy'
	id 'org.springframework.boot' version '2.7.0'
	id 'io.spring.dependency-management' version '1.1.0'
	id 'jacoco'
}

group = 'groovy.example'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '11'

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
	maven {
		url = uri("https://plugins.gradle.org/m2/")
	  }
	  maven { url 'https://repo.spring.io/milestone' }
	  maven { url 'https://repo.spring.io/snapshot' }
}

dependencies {
	
	implementation 'org.springframework.boot:spring-boot-starter'
	implementation 'org.codehaus.groovy:groovy'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	
	implementation 'org.springframework.boot:spring-boot-starter-actuator:1.5.6.RELEASE'
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-groovy-templates'
	implementation 'org.springframework.boot:spring-boot-starter-security'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-validation'
	//implementation 'org.apache.groovy:groovy'
//	compileOnly 'org.projectlombok:lombok'
	developmentOnly 'org.springframework.boot:spring-boot-devtools'
	runtimeOnly 'org.postgresql:postgresql'
	annotationProcessor 'org.projectlombok:lombok'
	implementation 'org.springdoc:springdoc-openapi-ui:1.6.15'
	implementation 'org.springdoc:springdoc-openapi-groovy:1.6.15'
	
	testImplementation 'org.junit.jupiter:junit-jupiter-api:5.8.1'
	testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.8.1'
	implementation 'io.jsonwebtoken:jjwt:0.9.1'
	//CONIG.GROOVY 3.2.0.RELEASE IS CORRECT
//	implementation 'org.springframework.security:spring-security-config:3.2.0.RELEASE'
//	testImplementation 'org.springframework.security:spring-security-test'
	implementation 'org.springframework.security:spring-security-core'
	implementation 'org.springframework.boot:spring-boot-autoconfigure'
	implementation 'org.springframework:spring-core:5.3.20'
	//implementation 'org.springframework:spring-core:4.2.4.RELEASE'
	
	implementation 'org.apache.logging.log4j:log4j:2.20.0'
	// https://mvnrepository.com/artifact/org.apache.httpcomponents/httpclient
	implementation 'org.apache.httpcomponents:httpclient:4.5.13'
	
	// https://mvnrepository.com/artifact/org.liquibase/liquibase-core
	implementation 'org.liquibase:liquibase-core:4.9.1'
	implementation 'org.jacoco:org.jacoco.core:0.8.8'
}

test {
	finalizedBy jacocoTestReport // report is always generated after tests run
}
/*jacocoTestReport {
	dependsOn test // tests are required to run before generating the report
	reports
	{
		xml.enabled false
        csv.enabled false
        html.enabled true
	}
}*/

jacocoTestReport {
	reports {
		xml.required = false
		csv.required = false
		html.outputLocation = layout.buildDirectory.dir('jacocoHtml')
	}
}

jacoco {
	toolVersion = "0.8.8"
	reportsDirectory = layout.buildDirectory.dir('customJacocoReportDir')
}
test {
	useJUnitPlatform()
}
//tasks.named('test') {
//	useJUnitPlatform()
//}
